<#
.SYNOPSIS
Retrieve the contents of the specified folder.

.PARAMETER AccessToken
The access_token generated by Get-DropboxAccessToken.

.PARAMETER Path
The path to the folder.

.PARAMETER Recursive
Include child items.

.PARAMETER SelectUser

.PARAMETER RootFolderId

.LINK
https://www.dropbox.com/developers/documentation/http/documentation#files-list_folder
#>
function Get-DropboxFolder {

    [CmdletBinding()]
    param (
        [Parameter(Mandatory)]
        [Alias('access_token')]
        [string]$AccessToken,

        [Parameter(Mandatory)]
        [string]$Path,

        [Parameter()]
        [switch]$Recursive,

        [string]$SelectUser,
        [string]$RootFolderId
    )

    $Headers = @{
        Authorization = 'Bearer ' + $AccessToken
    }

    if ($SelectUser) {$Headers['Dropbox-API-Select-User']=$SelectUser}
    if ($RootFolderId) {$Headers['Dropbox-API-Path-Root']=@{'.tag'='root'; root=$RootFolderId} | ConvertTo-Json -Compress}

    $Data = @{
        path = $Path
    }

    if ( $Recursive.IsPresent ) { $Data.recursive =  $true }

    $Fragment = 'files/list_folder'

    $Continue = $false

    do {

        Write-Debug "Uri: $Uri"
        $Content = Send-Request -Path $Fragment -Headers $Headers -Data $Data -Debug

        if ($Content) {

            # has more?
            if ( $Content.has_more ) {

                $Continue = $true
                $Fragment = 'files/list_folder/continue'
                $Data = @{
                    cursor = $Content.cursor
                }

            }
            else {
                $Continue = $false
            }

            # return array of folders
            $Content.entries

        }

    } while ( $Continue -eq $true )

}
